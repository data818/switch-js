// ! switch js არის კონტროლის სტრუქტურა JavaScript-ში, რომელიც გამოიყენება ბევრი პირობის შესამოწმებლად (იგივე რაც if-else if else, მაგრამ უფრო სუფთად და მკაფიოდ).ის ეხმარება პროგრამას შეადაროს ერთი მნიშვნელობა ბევრ შესაძლო ვარიანტს.
// ავტორი: დავით კვარელაშვილი
// თარიღი: 2025-07-07

//! მომხმარებელს ვეკითხებით რიცხვს (1-დან 7-მდე)
let dayNumber = prompt("შეიყვანე კვირის დღის ნომერი (1-7):");

// ! ვაქცევთ რიცხვად
dayNumber = Number(dayNumber);

//! switch სტრუქტურა ამოწმებს რიცხვს და აჩვენებს შესაბამის დღეს
switch (dayNumber) {
  case 1:
    alert("დღეს არის ორშაბათი");
    break;
  case 2:
    alert("დღეს არის სამშაბათი");
    break;
  case 3:
    alert("დღეს არის ოთხშაბათი");
    break;
  case 4:
    alert("დღეს არის ხუთშაბათი");
    break;
  case 5:
    alert("დღეს არის პარასკევი");
    break;
  case 6:
    alert("დღეს არის შაბათი");
    break;
  case 7:
    alert("დღეს არის კვირა");
    break;
  default:
    alert("არასწორი რიცხვი — უნდა იყოს 1-დან 7-მდე!");
}

// ! switch არის პროგრამირების კონსტრუქცია, რომელიც გამოიყენება ერთსა და იმავე მნიშვნელობაზე ბევრი პირობის შესამოწმებლად.

// !  რაში გვეხმარება:
//!  უფრო სუფთად და სწრაფად ვამოწმებთ რამდენიმე განსხვავებულ ვარიანტს.
// ! უფრო გასაგებია ვიდრე if-else if-else კოდის დიდი ბლოკები.
//  ! ეფექტურად მუშაობს როდესაც გვაქვს ერთი ცვლადი და ბევრი შესაძლო მნიშვნელობა.

// !მაგალითი (else if)
if (fruit === "apple") {
  // ...
} else if (fruit === "banana") {
  // ...
} else if (fruit === "orange") {
  // ...
}

//! (switch ჩანაცვლება)

switch (fruit) {
  case "apple":
    // ...
    break;
  case "banana":
    // ...
    break;
  case "orange":
    // ...
    break;
}
// ! თუ break არ დავწერეთ, ბრაუზერი გააგრძელებს ქვემოთ არსებულ ყველა case-ს შესრულებას, სანამ არ შეხვდება break ან switch ბლოკის ბოლოს.
// მაგალითი
let number = 2;

switch (number) {
  case 1:
    console.log("ერთი");
  case 2:
    console.log("ორი");
  case 3:
    console.log("სამი");
}

//!   switch მუშაობს მხოლოდ ზუსტად შევსებულ შემთხვევაში (===)
//  !  ყოველი case ბოლოს ვწერთ break რათა კოდი არ გააგრძელოს შემდეგ შემთხვევებზე გადასვლით
//!  შეიძლება გამოვიყენოთ switch(true)
//! ასეთ შემთხვევაში თითოეული case ამოწმებს პირობას (როგორც if-ში):

let age = 20;

switch (true) {
  case age < 13:
    console.log("ბავშვი");
    break;
  case age < 18:
    console.log("თინეიჯერი");
    break;
  default:
    console.log("ზრდასრული");
}

//! ერთზე მეტი case ერთნაირ მოქმედებაზე შეგვიძლია რამდენიმე case დავამთხვიოთ ერთსა და იმავე შედეგს:

let day = "შაბათი";

switch (day) {
  case "შაბათი":
  case "კვირა":
    console.log("დასვენების დღე");
    break;
  default:
    console.log("სამუშაო დღე");
}

// !switch კარგი არჩევანია, როცა გვაქვს:
//  !   ერთი ცვლადი
//   !      ბევრი ზუსტი შესაძლო მნიშვნელობა
//    !   და გვინდა კოდი გავხადოთ უფრო სუფთა და მარტივი
